---
Parameters:
  AdminIp:
    Type: String
    Default: 0.0.0.0/0
  AmiId:
    Description: AWS Linux 2 AMI ID
    Type: AWS::EC2::Image::Id
  VpcId:
    Type: AWS::EC2::VPC::Id
  SubnetId:
    Description: Subnet ID with public IP addressing
    Type: AWS::EC2::Subnet::Id
  KeyPair:
    Type: AWS::EC2::KeyPair::KeyName

Resources:
  Ec2Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref AmiId
      KeyName: !Ref KeyPair
      SubnetId: !Ref SubnetId
      InstanceType: t2.medium
      SecurityGroupIds:
        - !Ref Ec2InstanceSecurityGroup
      UserData:
        Fn::Base64: !Sub |
          #!/usr/bin/env bash
          yum update -y
          yum upgrade -y
          mkdir -p /home/ec2-user
          wget https://raw.githubusercontent.com/OzNetNerd/Packer-Gitlab/master/config/gitlab-setup.sh
          sed -e s/"sudo "//g -i gitlab-setup.sh
          chmod +x gitlab-setup.sh
          ./gitlab-setup.sh
          rm gitlab-setup.sh
          wget https://raw.githubusercontent.com/OzNetNerd/Packer-Gitlab/master/config/Makefile
          wget https://raw.githubusercontent.com/OzNetNerd/Packer-Gitlab/master/config/docker-compose.yml
          chown ec2-user:ec2-user Makefile
          chown ec2-user:ec2-user docker-compose.yml
          mv ./Makefile /home/ec2-user
          mv ./docker-compose.yml /home/ec2-user
      Tags:
        - Key: Name
          Value: GitLab

  Ec2InstanceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow access to the GitLab machine
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        CidrIp: !Ref AdminIp
      VpcId: !Ref VpcId

Outputs:
  Ec2InstanceHostname:
    Value: !GetAtt Ec2Instance.PublicDnsName
    Export:
      Name: !Sub "${AWS::StackName}-Ec2Instance"